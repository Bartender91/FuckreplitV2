module.exports = {
  config: {
    name: "genimg",
    version: "1.0.0",
    author: "Deku",
    description: {
      en: "Search for images generated by AI",
    },
    usePrefix: true,
    commandCategory: {
      en: "With Prefix",
    },
    usage: {
      en: "text - number of images to show",
    },
    cooldowns: 5,
  },

  langs: {
    en: {
      usageExample: "Usage: {prefix}{command} mark Zuckerberg - 10",
      generating: "‚è≥ Generating...",
      totalImages: "Total images: ",
      showingImages: "Showing ",
      generatedImagesFor: " generated images for ",
      generatedByAI: "Generated by AI",
    },
  },

  onStart: async function ({
    api,
    args,
    event,
    threadsData,
    getLang,
  }) {
    const axios = require("axios");
    const fs = require("fs-extra");
    const keySearch = args.join(" ");
    if (!keySearch.includes("-"))
      return api.sendMessage(
        getLang("usageExample"),
        event.threadID,
        event.messageID
      );
    api.sendMessage(getLang("generating"), event.threadID, event.messageID);
    const keySearchs = keySearch.substr(0, keySearch.indexOf("-"));
    const numberSearch = keySearch.split("-").pop() || 6;
    const res = await axios.get(
      `https://free-api.ainz-sama101.repl.co/others/genimg?prompt=${encodeURIComponent(
        keySearchs
      )}`
    );
    const data = res.data.result;
    var num = 0;
    var imgData = [];
    for (var i = 0; i < parseInt(numberSearch); i++) {
      let path = __dirname + `/cache/${num += 1}.jpg`;
      let getDown = (
        await axios.get(`${data[i]}`, { responseType: "arraybuffer" })
      ).data;
      fs.writeFileSync(path, Buffer.from(getDown, "utf-8"));
      imgData.push(fs.createReadStream(__dirname + `/cache/${num}.jpg`));
    }
    api.sendMessage(
      {
        attachment: imgData,
        body:
          getLang("totalImages") +
          data.length +
          "\n" +
          getLang("showingImages") +
          numberSearch +
          getLang("generatedImagesFor") +
          keySearchs +
          "\n" +
          getLang("generatedByAI"),
      },
      event.threadID,
      event.messageID
    );
    for (let ii = 1; ii < parseInt(numberSearch); ii++) {
      fs.unlinkSync(__dirname + `/cache/${ii}.jpg`);
    }
  },
};